ext {
    versions = [
            springBoot          : '3.3.2',
            springCloud         : '4.1.3',
            jwt                 : '4.4.0',
            postgreSQL          : '42.7.3',
            mySQL               : '8.0.33',
            h2                  : '2.2.224',
            circuitBreaker      : "3.0.3",
            elasticsearch       : '5.3.2',
            flyway              : '9.22.3',
            kafka               : '3.2.2',
            lombok              : '1.18.34',
            mapstruct           : '1.5.5.Final',
            swagger             : '2.6.0',
            zipkin              : '3.4.0',
            micrometerTracing   : '1.3.2',
            micrometerPrometheus: '1.13.2',
            loki                : '1.5.1',
    ]

    libs = [
            springBootStarterWeb        : "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}",
            springBootDataJpa           : "org.springframework.boot:spring-boot-starter-data-jpa:${versions.springBoot}",
            springBootDataRedis         : "org.springframework.boot:spring-boot-starter-data-redis:${versions.springBoot}",
            springBootDataMongo         : "org.springframework.boot:spring-boot-starter-data-mongodb:${versions.springBoot}",
            springDataElasticsearch     : "org.springframework.data:spring-data-elasticsearch:${versions.elasticsearch}",
            springBootValidation        : "org.springframework.boot:spring-boot-starter-validation:${versions.springBoot}",
            springCloudStarterOpenFeign : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.springCloud}",
            springBootStarterSecurity   : "org.springframework.boot:spring-boot-starter-security:${versions.springBoot}",
            springBootStarterActuator   : "org.springframework.boot:spring-boot-starter-actuator:${versions.springBoot}",
            springBootStarterMail       : "org.springframework.boot:spring-boot-starter-mail:${versions.springBoot}",
            springBootStarterThymeleaf  : "org.springframework.boot:spring-boot-starter-thymeleaf:${versions.springBoot}",
            springBootAmqp             : "org.springframework.boot:spring-boot-starter-amqp:$versions.springBoot",
            springCloudCircuitBreaker  :"org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:$versions.circuitBreaker",
            springCloudCircuitBreakerReactive  :"org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:$versions.circuitBreaker",
            springCloudConfig           : "org.springframework.cloud:spring-cloud-starter-config:${versions.springCloud}",
            springCloudConfigServer     : "org.springframework.cloud:spring-cloud-config-server:${versions.springCloud}",
            springCloudConfigClient     : "org.springframework.cloud:spring-cloud-config-client:${versions.springCloud}",
            springCloudEurekaServer     : "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${versions.springCloud}",
            springCloudEurekaClient     : "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${versions.springCloud}",
            springCloudGateway          : "org.springframework.cloud:spring-cloud-starter-gateway:${versions.springCloud}",
            springKafka                 : "org.springframework.kafka:spring-kafka:${versions.kafka}",
            openFeign                   : "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.springCloud}",
            h2Database                  : "com.h2database:h2:${versions.h2}",
            mapstruct                   : "org.mapstruct:mapstruct:${versions.mapstruct}",
            mapstructProcessor         : "org.mapstruct:mapstruct-processor:${versions.mapstruct}",
            flywayPostgresql            : "org.flywaydb:flyway-database-postgresql:${versions.flyway}",
            flywayCore                  : "org.flywaydb:flyway-core:${versions.flyway}",
            postgreSQL                  : "org.postgresql:postgresql:${versions.postgreSQL}",
            mySQL                       : "mysql:mysql-connector-java:${versions.mySQL}",
            lombok                      : "org.projectlombok:lombok:${versions.lombok}",
            swaggerui                   : "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.swagger}",
            zipkinReporter              : "io.zipkin.reporter2:zipkin-reporter-brave:${versions.zipkin}",
            micrometerTracing           : "io.micrometer:micrometer-tracing-bridge-brave:${versions.micrometerTracing}",
            micrometerPrometheus        : "io.micrometer:micrometer-registry-prometheus:${versions.micrometerPrometheus}",
            logbackAppenderLoki         : "com.github.loki4j:loki-logback-appender:${versions.loki}",
            jwt                        : "com.auth0:java-jwt:${versions.jwt}"
    ]
}
